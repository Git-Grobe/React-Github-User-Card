{"ast":null,"code":"var _jsxFileName = \"/Users/scottgrobe/Documents/GitHub/React-Github-User-Card/src/App.js\";\nimport React from \"react\";\nimport UserCard from \"./UserCard\";\nimport FollowerCard from \"./FollowerCard\";\nimport styled from 'styled-components';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      dataFollowers: []\n    };\n  }\n\n  // componentDidMount() {\n  //   fetch(`https://api.github.com/users/Git-Grobe`)\n  //   .then(res => res.json())\n  //   .then(res => {\n  //     console.log(res, 'DATA');\n  //     this.setState({\n  //       data: res\n  //     })\n  //   })\n  //   .catch(err => console.log(err))\n  // }\n  componentWillMount() {\n    Promise.all([fetch(\"https://api.github.com/users/Git-Grobe\"), fetch(\"https://api.github.com/users/Git-Grobe/followers\")]).then(([res1, res2]) => Promise.all([res1.json(), res2.json()])).then(([data1, data2]) => this.setState({\n      data: data1,\n      dataFollowers: data2\n    })).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, console.log(this.state.data.name, 'AHHH NAME'), console.log(this.state.dataFollowers, 'AHHH 2'), React.createElement(UserCard, {\n      username: this.state.data.name,\n      image: this.state.data.avatar_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(FollowerCard, {\n      followers: this.state.dataFollowers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/scottgrobe/Documents/GitHub/React-Github-User-Card/src/App.js"],"names":["React","UserCard","FollowerCard","styled","App","Component","state","data","dataFollowers","componentWillMount","Promise","all","fetch","then","res1","res2","json","data1","data2","setState","catch","err","console","log","render","name","avatar_url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,aAAa,EAAE;AAFT,KAFwB;AAAA;;AAOhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CACVC,KAAK,0CADK,EAEVA,KAAK,oDAFK,CAAZ,EAICC,IAJD,CAIM,CAAC,CAACC,IAAD,EAAOC,IAAP,CAAD,KAAkBL,OAAO,CAACC,GAAR,CAAY,CAACG,IAAI,CAACE,IAAL,EAAD,EAAcD,IAAI,CAACC,IAAL,EAAd,CAAZ,CAJxB,EAKCH,IALD,CAKM,CAAC,CAACI,KAAD,EAAQC,KAAR,CAAD,KAAoB,KAAKC,QAAL,CAAc;AACtCZ,MAAAA,IAAI,EAAEU,KADgC;AAEtCT,MAAAA,aAAa,EAAEU;AAFuB,KAAd,CAL1B,EASCE,KATD,CASOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAXD;AAYD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE,0CACCF,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,IAAX,CAAgBkB,IAA5B,EAAkC,WAAlC,CADD,EAECH,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,aAAvB,EAAsC,QAAtC,CAFD,EAGA,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,IAAX,CAAgBkB,IAApC;AAA0C,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,IAAX,CAAgBmB,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWE,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CADF;AAQD;;AA3C+B;;AA8ClC,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\nimport UserCard from \"./UserCard\"\nimport FollowerCard from \"./FollowerCard\"\n\nimport styled from 'styled-components'\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    dataFollowers: [],\n  }\n\n  // componentDidMount() {\n  //   fetch(`https://api.github.com/users/Git-Grobe`)\n  //   .then(res => res.json())\n  //   .then(res => {\n  //     console.log(res, 'DATA');\n  //     this.setState({\n  //       data: res\n  //     })\n  //   })\n  //   .catch(err => console.log(err))\n  // }\n  \n  componentWillMount() {\n    Promise.all([\n      fetch(`https://api.github.com/users/Git-Grobe`),\n      fetch(`https://api.github.com/users/Git-Grobe/followers`)\n    ])\n    .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\n    .then(([data1, data2]) => this.setState({\n      data: data1,\n      dataFollowers: data2\n    }))\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  render() {\n    return (\n      <>\n      {console.log(this.state.data.name, 'AHHH NAME')}\n      {console.log(this.state.dataFollowers, 'AHHH 2')}\n      <UserCard username={this.state.data.name} image={this.state.data.avatar_url}/>\n      <FollowerCard followers={this.state.dataFollowers}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}